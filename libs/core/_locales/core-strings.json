{
  "Array._popStatement|block": "remove last value from %list",
  "Array._removeAtStatement|block": "%list| remove value at %index",
  "Array._shiftStatement|block": "remove first value from %list",
  "Array._unshiftStatement|block": "%list| insert %value| at beginning",
  "Array.indexOf|block": "%list| find index of %value",
  "Array.insertAt|block": "%list| insert at %index| value %value",
  "Array.length|block": "length of %VALUE",
  "Array.pop|block": "get and remove last value from %list",
  "Array.push|block": "%list| add value %value| to end",
  "Array.removeAt|block": "%list| get and remove value at %index",
  "Array.reverse|block": "reverse %list",
  "Array.shift|block": "get and remove first value from %list",
  "Array.unshift|block": "%list| insert %value| at beginning",
  "Array|block": "Array",
  "Math.randomRange|block": "pick random %min|to %limit",
  "Math|block": "Math",
  "Number|block": "Number",
  "Object|block": "Object",
  "String.charAt|block": "char from %this=text|at %pos",
  "String.compare|block": "compare %this=text| to %that",
  "String.fromCharCode|block": "text from char code %code",
  "String.includes|block": "%this=text|includes %searchValue",
  "String.indexOf|block": "%this=text|find index of %searchValue",
  "String.isEmpty|block": "%this=text| is empty",
  "String.length|block": "length of %VALUE",
  "String.split|block": "split %this=text|at %separator",
  "String.substr|block": "substring of %this=text|from %start|of length %length",
  "String|block": "String",
  "operators.addShapes|block": "add shapes",
  "operators.flipShapes|block": "flip shapes $x x°",
  "operators.intersectShapes|block": "intersect shapes",
  "operators.moveShapesAcross|block": "move shapes across $x",
  "operators.moveShapesOver|block": "move shapes over $y",
  "operators.moveShapesUp|block": "move shapes up $z",
  "operators.rollShapes|block": "roll shapes $y y°",
  "operators.rotateShapes|block": "rotate shapes x°: $x|  y°: $y | z°: $z",
  "operators.sequentialWrap2DShapes|block": "wrap 2d shapes sequentially (chain hull)",
  "operators.spinShapes|block": "spin shapes $z z°",
  "operators.subtractShapes|block": "subtract shapes",
  "operators.translateShapes|block": "translate shapes x: $x|  y: $y |  z: $z",
  "operators.wrap2DShapes|block": "wrap 2d shapes (hull)",
  "operators|block": "operators",
  "parseFloat|block": "parse to number %text",
  "parseInt|block": "parse to integer %text",
  "randint|block": "pick random %min|to %limit",
  "shapes.circle|block": "circle radius $radius",
  "shapes.cone|block": "cone radius $radius|height $height|| color $color | faces $faces",
  "shapes.cube|block": "cube %type=main_iconPicker width $width|depth $depth|height $height||color $color",
  "shapes.cylinder|block": "cylinder radius $radius|height $height||color $color|radius2 $radius2|center $centerZ|faces $faces",
  "shapes.donut|block": "donut thickness $thickness|radius $radius||color $color|inner faces $innerFaces|outer faces $outerFaces|innerRotation $innerRotation",
  "shapes.point2d|block": "2D point x: $x|y:  $y",
  "shapes.point3d|block": "3D point x: $x|y:  $y|z:  $z",
  "shapes.rect|block": "rect width $width|height $height",
  "shapes.sphere|block": "sphere radius $radius || color $color|type $type|center $centerZ|faces $faces",
  "shapes.text|block": "write text $text||line width $lineWidth|height $height|color $color",
  "shapes|block": "shapes",
  "{id:category}Array": "Array",
  "{id:category}Arrays": "Arrays",
  "{id:category}Boolean": "Boolean",
  "{id:category}Control": "Control",
  "{id:category}Helpers": "Helpers",
  "{id:category}Math": "Math",
  "{id:category}Number": "Number",
  "{id:category}Object": "Object",
  "{id:category}Operators": "Operators",
  "{id:category}Shapes": "Shapes",
  "{id:category}String": "String",
  "{id:category}Text": "Text",
  "{id:group}2D Shapes": "2D Shapes",
  "{id:group}2D to 3D Shape Converters": "2D to 3D Shape Converters",
  "{id:group}3D Shapes": "3D Shapes",
  "{id:group}Modify": "Modify",
  "{id:group}Operations": "Operations",
  "{id:group}Points": "Points",
  "{id:group}Position": "Position",
  "{id:group}Read": "Read",
  "{id:group}Rotation": "Rotation"
}